version: '3.8'

services:
  config-server:
    image: redartis/et-config-server:v0.0.1
    container_name: config-server
    build:
      context: .
      dockerfile: config-server/Dockerfile
    restart: unless-stopped
    healthcheck:
      test: "curl --fail --silent localhost:8888/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    ports:
      - "8888:8888"
    environment:
      CONFIG_SERVER_GIT_REPOSITORY_URI: ${CONFIG_SERVER_GIT_REPOSITORY_URI}
    extends:
      file: common-config.yml
      service: microservice-base-config
    volumes:
      - ./logs/config-server:/app/logs

  eureka-service:
    image: redartis/et-eureka-service:v0.0.1
    container_name: eureka-service
    build:
      context: .
      dockerfile: discovery-service/Dockerfile
    restart: unless-stopped
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    ports:
      - "8761:8761"
    extends:
      file: common-config.yml
      service: microservice-config-server-config
    environment:
      SPRING_APPLICATION_NAME: "eureka-service"
    volumes:
      - ./logs/eureka-service:/app/logs

  expense-tracker-db:
    container_name: expense-tracker-db
    image: postgres
    restart: unless-stopped
    ports:
      - "5436:5432"
    environment:
      POSTGRES_DB: ${EXPENSE_DB}
      POSTGRES_USER: ${EXPENSE_DB_USER}
      POSTGRES_PASSWORD: ${EXPENSE_DB_PASSWORD}
    extends:
      file: common-config.yml
      service: network-deploy-service

  authentication-service:
    image: redartis/et-authentication-service:v0.0.1
    container_name: auth-service
    build:
      context: .
      dockerfile: authentication-service/Dockerfile
    ports:
      - "8400:8400"
    restart: on-failure
    healthcheck:
      test: "curl --fail --silent localhost:8400/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-eureka-config
    environment:
      SPRING_APPLICATION_NAME: "authentication-service"
    volumes:
      - /logs/authentication-service:/app/logs

  expense-service:
    image: redartis/et-expense-service:v0.0.1
    container_name: expense-service
    build:
      context: .
      dockerfile: expense-service/Dockerfile
    ports:
      - "8100:8100"
    restart: on-failure
    healthcheck:
      test: "curl --fail --silent localhost:8100/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      expense-tracker-db:
        condition: service_started
    extends:
      file: common-config.yml
      service: microservice-eureka-config
    environment:
      SPRING_APPLICATION_NAME: "expense-service"
      SPRING_DATASOURCE_URL: jdbc:postgresql://expense-tracker-db:5432/${EXPENSE_DB}
    volumes:
      - ./logs/expense-service:/app/logs

  telegram-bot-mongodb:
    container_name: telegram-bot-mongodb
    image: mongo
    restart: unless-stopped
    ports:
      - "7017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    extends:
      file: common-config.yml
      service: network-deploy-service

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "7018:8081"
    depends_on:
      - telegram-bot-mongodb
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGODB_EXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGODB_EXPRESS_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@telegram-bot-mongodb:27017/
    extends:
      file: common-config.yml
      service: network-deploy-service

  telegram-bot-service:
    image: redartis/et-telegram-bot-service:v0.0.1
    container_name: telegram-bot-service
    build:
      context: .
      dockerfile: telegram-bot-service/Dockerfile
    restart: on-failure
    healthcheck:
      test: "curl --fail --silent localhost:8200/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      telegram-bot-mongodb:
        condition: service_started
    ports:
      - "8200:8200"
    extends:
      file: common-config.yml
      service: microservice-eureka-config
    environment:
      SPRING_APPLICATION_NAME: "telegram-bot-service"
      SPRING_DATA_MONGODB_URI: "mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@telegram-bot-mongodb:27017/${MONGODB_DATABASE}?authSource=admin"
    volumes:
      - ./logs/telegram-bot-service:/app/logs

  recognizer-service:
    image: redartis/et-recognizer-service:v0.0.1
    container_name: recognizer-service
    build:
      context: .
      dockerfile: recognizer-service/Dockerfile
    restart: on-failure
    healthcheck:
      test: "curl --fail --silent localhost:8300/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    ports:
      - "8300:8300"
    extends:
      file: common-config.yml
      service: microservice-eureka-config
    environment:
      SPRING_APPLICATION_NAME: "recognizer-service"
    volumes:
      - ./logs/recognizer-service:/app/logs

  gateway-server:
    image: redartis/et-api-gateway-server:v0.0.1
    container_name: api-gateway-server
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8072:8072"
    depends_on:
      authentication-service:
        condition: service_healthy
      expense-service:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "api-gateway"
    extends:
      file: common-config.yml
      service: microservice-eureka-config
    volumes:
      - ./logs/api-gateway:/app/logs

networks:
  expense-network:
    driver: "bridge"
    name: "expense_network"
